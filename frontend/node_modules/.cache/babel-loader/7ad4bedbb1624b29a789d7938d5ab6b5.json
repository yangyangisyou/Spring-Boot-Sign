{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport { useKeyDown } from '../_shared/hooks/useKeyDown';\nexport var InlineWrapper = function InlineWrapper(_ref) {\n  var open = _ref.open,\n      wider = _ref.wider,\n      children = _ref.children,\n      PopoverProps = _ref.PopoverProps,\n      onClear = _ref.onClear,\n      onDismiss = _ref.onDismiss,\n      onSetToday = _ref.onSetToday,\n      onAccept = _ref.onAccept,\n      showTabs = _ref.showTabs,\n      DateInputProps = _ref.DateInputProps,\n      InputComponent = _ref.InputComponent,\n      other = _objectWithoutProperties(_ref, [\"open\", \"wider\", \"children\", \"PopoverProps\", \"onClear\", \"onDismiss\", \"onSetToday\", \"onAccept\", \"showTabs\", \"DateInputProps\", \"InputComponent\"]);\n\n  var ref = React.useRef();\n  useKeyDown(open, {\n    Enter: onAccept\n  });\n  return React.createElement(React.Fragment, null, React.createElement(InputComponent, _extends({}, other, DateInputProps, {\n    inputRef: ref\n  })), React.createElement(Popover, _extends({\n    open: open,\n    onClose: onDismiss,\n    anchorEl: ref.current,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    children: children\n  }, PopoverProps)));\n};\nprocess.env.NODE_ENV !== \"production\" ? InlineWrapper.propTypes = {\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  PopoverProps: PropTypes.object\n} : void 0;","map":null,"metadata":{},"sourceType":"module"}