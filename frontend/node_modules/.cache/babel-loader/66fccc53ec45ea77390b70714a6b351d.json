{"ast":null,"code":"var _jsxFileName = \"/Users/joe.lin/Documents/IJ/demo/frontend/src/javascript/Signin.js\";\nimport React, { Component } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport serverip from \"./config/serverip\";\nimport axios from \"axios\";\nimport setJWTToken from \"./setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/login\", LoginRequest).then(res => {\n      if (res.status === 200) {\n        alert(\"Sign in successful\");\n        this.props.history.push(\"/\");\n      } else {\n        const error = new Error(res.error);\n        alert(error);\n        throw error;\n      }\n    }); // extract token from res.data\n\n    const token = res.data.token; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on React\n\n    const decoded = jwt_decode(token);\n    alert(\"Sign in successful.\");\n    console.log(\"Sign in successful.\"); // dispatch to our securityReducer\n\n    dispatch({\n      type: 1,\n      payload: decoded\n    });\n  } catch (err) {\n    alert(\"Sign in failed.\");\n    console.log(\"Sign in failed.\");\n    dispatch({\n      type: -1,\n      payload: err.response.data\n    });\n  }\n};\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const LoginRequest = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.login(LoginRequest); //LoginRequest();\n      //login(LoginRequest);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  } // componentDidMount() {\n  //   if (this.props.security.validToken) {\n  //     this.props.history.push(\"/\");\n  //   }\n  // }\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.security.validToken) {\n  //     this.props.history.push(\"/\");\n  //   }\n  //   if (nextProps.errors) {\n  //     this.setState({ errors: nextProps.errors });\n  //   }\n  // }\n  // 改變輸入資料到state\n\n\n  render() {\n    return React.createElement(MDBContainer, {\n      className: \"h630\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h1 text-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"label\", {\n      htmlFor: \"defaultFormLoginNameEx\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"defaultFormLoginNameEx\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"defaultFormLoginPasswordEx\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"defaultFormLoginPasswordEx\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"indigo\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Login\"))))));\n  }\n\n}\n\nexport default Signin;","map":{"version":3,"sources":["/Users/joe.lin/Documents/IJ/demo/frontend/src/javascript/Signin.js"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBBtn","serverip","axios","setJWTToken","jwt_decode","login","LoginRequest","dispatch","res","post","then","status","alert","props","history","push","error","Error","token","data","localStorage","setItem","decoded","console","log","type","payload","err","response","Signin","constructor","handleInputChange","event","target","value","name","setState","onSubmit","preventDefault","email","state","password","render"],"mappings":"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","sourcesContent":["import React, { Component} from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport serverip from \"./config/serverip\";\nimport axios from \"axios\";\nimport setJWTToken from \"./setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/login\", LoginRequest)\n    .then(res => {\n      if(res.status === 200){\n        alert(\"Sign in successful\")\n        this.props.history.push(\"/\");\n      }else{\n        const error = new Error(res.error);\n        alert(error)\n        throw error;\n      }\n    })\n\n    // extract token from res.data\n    const { token } = res.data;\n\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set our token in header ***\n    setJWTToken(token);\n\n    // decode token on React\n    const decoded = jwt_decode(token);\n\n    alert(\"Sign in successful.\")\n    console.log(\"Sign in successful.\")\n\n    // dispatch to our securityReducer\n    dispatch({\n      type: 1,\n      payload: decoded\n    });\n\n  } catch (err) {\n    alert(\"Sign in failed.\")\n    console.log(\"Sign in failed.\")\n    dispatch({\n      type: -1,\n      payload: err.response.data\n    });\n  }\n};\n\n\nclass Signin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    }\n  }\n\n  // componentDidMount() {\n  //   if (this.props.security.validToken) {\n  //     this.props.history.push(\"/\");\n  //   }\n  // }\n\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.security.validToken) {\n  //     this.props.history.push(\"/\");\n  //   }\n\n  //   if (nextProps.errors) {\n  //     this.setState({ errors: nextProps.errors });\n  //   }\n  // }\n\n\n\n  // 改變輸入資料到state\n  handleInputChange = event => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n  // 提交登入資料\n  onSubmit = event => {\n    event.preventDefault();\n\n    const LoginRequest = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n    //LoginRequest();\n    //login(LoginRequest);\n  };\n\n  \n\n\n\n  render() {\n    return (\n      <MDBContainer className=\"h630\">\n        <MDBRow>\n          <MDBCol md=\"4\">\n            <form onSubmit={this.onSubmit}>\n              <p className=\"h1 text-center mb-4\">Sign in</p>\n              <label htmlFor=\"defaultFormLoginNameEx\" className=\"grey-text\">\n                email\n              </label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                id=\"defaultFormLoginNameEx\"\n                className=\"form-control\"\n                value={this.state.email}\n                onChange={this.handleInputChange}\n                required\n              />\n              <br />\n              <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                password\n              </label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                id=\"defaultFormLoginPasswordEx\"\n                className=\"form-control\"\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                required\n              />\n              <div className=\"text-center mt-4\">\n                <MDBBtn color=\"indigo\" type=\"submit\">\n                  Login\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default Signin;"]},"metadata":{},"sourceType":"module"}