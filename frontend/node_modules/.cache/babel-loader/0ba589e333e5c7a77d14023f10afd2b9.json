{"ast":null,"code":"import _defineProperty from \"/Users/joe.lin/Documents/IJ/demo/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/joe.lin/Documents/IJ/demo/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joe.lin/Documents/IJ/demo/frontend/src/javascript/Bookcase.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\nconst _React$useState = React.useState({\n  columns: [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Surname',\n    field: 'surname'\n  }, {\n    title: 'Birth Year',\n    field: 'birthYear',\n    type: 'numeric'\n  }, {\n    title: 'Birth Place',\n    field: 'birthCity',\n    lookup: {\n      34: 'İstanbul',\n      63: 'Şanlıurfa'\n    }\n  }],\n  data: [{\n    name: 'Mehmet',\n    surname: 'Baran',\n    birthYear: 1987,\n    birthCity: 63\n  }, {\n    name: 'Zerya Betül',\n    surname: 'Baran',\n    birthYear: 2017,\n    birthCity: 34\n  }]\n}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\nclass Bookcase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(MaterialTable, {\n      title: \"Editable Example\",\n      columns: state.columns,\n      data: state.data,\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...state.data];\n            data.push(newData);\n            setState(_objectSpread({}, state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...state.data];\n            data[data.indexOf(oldData)] = newData;\n            setState(_objectSpread({}, state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...state.data];\n            data.splice(data.indexOf(oldData), 1);\n            setState(_objectSpread({}, state, {\n              data\n            }));\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Bookcase;","map":{"version":3,"sources":["/Users/joe.lin/Documents/IJ/demo/frontend/src/javascript/Bookcase.js"],"names":["React","Component","MaterialTable","useState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","state","setState","Bookcase","render","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;wBAC0BF,KAAK,CAACG,QAAN,CAAe;AACrCC,EAAAA,OAAO,EAAE,CACP;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADO,EAEP;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAFO,EAGP;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE,WAA9B;AAA2CC,IAAAA,IAAI,EAAE;AAAjD,GAHO,EAIP;AACEF,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEE,IAAAA,MAAM,EAAE;AAAE,UAAI,UAAN;AAAkB,UAAI;AAAtB;AAHV,GAJO,CAD4B;AAWrCC,EAAAA,IAAI,EAAE,CACJ;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,OAAO,EAAE,OAA3B;AAAoCC,IAAAA,SAAS,EAAE,IAA/C;AAAqDC,IAAAA,SAAS,EAAE;AAAhE,GADI,EAEJ;AACEH,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,OAAO,EAAE,OAFX;AAGEC,IAAAA,SAAS,EAAE,IAHb;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAFI;AAX+B,CAAf,C;;MAAnBC,K;MAAOC,Q;;AAsBd,MAAMC,QAAN,SAAuBf,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE/Ba,KAF+B,GAEvB,EAFuB;AAAA;;AAI/BG,EAAAA,MAAM,GAAG;AACL,WACE,oBAAC,aAAD;AACA,MAAA,KAAK,EAAC,kBADN;AAEA,MAAA,OAAO,EAAEH,KAAK,CAACV,OAFf;AAGA,MAAA,IAAI,EAAEU,KAAK,CAACL,IAHZ;AAIA,MAAA,QAAQ,EAAE;AACRS,QAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,OAAO;AACP,kBAAMZ,IAAI,GAAG,CAAC,GAAGK,KAAK,CAACL,IAAV,CAAb;AACAA,YAAAA,IAAI,CAACc,IAAL,CAAUJ,OAAV;AACAJ,YAAAA,QAAQ,mBAAMD,KAAN;AAAaL,cAAAA;AAAb,eAAR;AACD,WALS,EAKP,GALO,CAAV;AAMD,SAPD,CAFM;AAURe,QAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAYC,OAAO,IAAI;AACrBC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,OAAO;AACP,kBAAMZ,IAAI,GAAG,CAAC,GAAGK,KAAK,CAACL,IAAV,CAAb;AACAA,YAAAA,IAAI,CAACA,IAAI,CAACiB,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BN,OAA9B;AACAJ,YAAAA,QAAQ,mBAAMD,KAAN;AAAaL,cAAAA;AAAb,eAAR;AACD,WALS,EAKP,GALO,CAAV;AAMD,SAPD,CAXM;AAmBRkB,QAAAA,WAAW,EAAEF,OAAO,IAClB,IAAIL,OAAJ,CAAYC,OAAO,IAAI;AACrBC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,OAAO;AACP,kBAAMZ,IAAI,GAAG,CAAC,GAAGK,KAAK,CAACL,IAAV,CAAb;AACAA,YAAAA,IAAI,CAACmB,MAAL,CAAYnB,IAAI,CAACiB,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACAV,YAAAA,QAAQ,mBAAMD,KAAN;AAAaL,cAAAA;AAAb,eAAR;AACD,WALS,EAKP,GALO,CAAV;AAMD,SAPD;AApBM,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAoCH;;AAzC8B;;AA4CjC,eAAeO,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nconst [state, setState] = React.useState({\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname' },\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ],\n    data: [\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34,\n      },\n    ],\n  });\n\nclass Bookcase extends Component {\n\n  state = {};\n\n  render() {\n      return (\n        <MaterialTable\n        title=\"Editable Example\"\n        columns={state.columns}\n        data={state.data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      );\n  }\n}\n\nexport default Bookcase;\n"]},"metadata":{},"sourceType":"module"}