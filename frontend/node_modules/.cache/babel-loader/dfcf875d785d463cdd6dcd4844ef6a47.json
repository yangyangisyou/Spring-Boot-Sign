{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _getPrototypeOf = _interopRequireDefault(require(\"@babel/runtime/core-js/object/get-prototype-of\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _keycode = _interopRequireDefault(require(\"keycode\"));\n\nvar _contains = _interopRequireDefault(require(\"dom-helpers/query/contains\"));\n\nvar _activeElement = _interopRequireDefault(require(\"dom-helpers/activeElement\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"dom-helpers/ownerDocument\"));\n\nvar _List = _interopRequireDefault(require(\"../List\")); // @inheritedComponent List\n\n\nvar MenuList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(MenuList, _React$Component);\n\n  function MenuList() {\n    var _ref;\n\n    var _temp, _this;\n\n    (0, _classCallCheck2.default)(this, MenuList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = MenuList.__proto__ || (0, _getPrototypeOf.default)(MenuList)).call.apply(_ref, [this].concat(args))), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        currentTabIndex: undefined\n      }\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"list\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: undefined\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"selectedItem\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: undefined\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"blurTimer\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: undefined\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleBlur\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        _this.blurTimer = setTimeout(function () {\n          if (_this.list) {\n            var list = _reactDom.default.findDOMNode(_this.list);\n\n            var currentFocus = (0, _activeElement.default)((0, _ownerDocument.default)(list));\n\n            if (!(0, _contains.default)(list, currentFocus)) {\n              _this.resetTabIndex();\n            }\n          }\n        }, 30);\n\n        if (_this.props.onBlur) {\n          _this.props.onBlur(event);\n        }\n      }\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleKeyDown\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        var list = _reactDom.default.findDOMNode(_this.list);\n\n        var key = (0, _keycode.default)(event);\n        var currentFocus = (0, _activeElement.default)((0, _ownerDocument.default)(list));\n\n        if ((key === 'up' || key === 'down') && (!currentFocus || currentFocus && !(0, _contains.default)(list, currentFocus))) {\n          if (_this.selectedItem) {\n            _reactDom.default.findDOMNode(_this.selectedItem).focus();\n          } else {\n            list.firstChild.focus();\n          }\n        } else if (key === 'down') {\n          event.preventDefault();\n\n          if (currentFocus.nextElementSibling) {\n            currentFocus.nextElementSibling.focus();\n          }\n        } else if (key === 'up') {\n          event.preventDefault();\n\n          if (currentFocus.previousElementSibling) {\n            currentFocus.previousElementSibling.focus();\n          }\n        }\n\n        if (_this.props.onKeyDown) {\n          _this.props.onKeyDown(event, key);\n        }\n      }\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleItemFocus\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(event) {\n        var list = _reactDom.default.findDOMNode(_this.list);\n\n        if (list) {\n          for (var i = 0; i < list.children.length; i += 1) {\n            if (list.children[i] === event.currentTarget) {\n              _this.setTabIndex(i);\n\n              break;\n            }\n          }\n        }\n      }\n    }), _temp));\n  }\n\n  (0, _createClass2.default)(MenuList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resetTabIndex();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.blurTimer);\n    }\n  }, {\n    key: \"setTabIndex\",\n    value: function setTabIndex(index) {\n      this.setState({\n        currentTabIndex: index\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var currentTabIndex = this.state.currentTabIndex;\n\n      var list = _reactDom.default.findDOMNode(this.list);\n\n      if (!list || !list.children || !list.firstChild) {\n        return;\n      }\n\n      if (currentTabIndex && currentTabIndex >= 0) {\n        list.children[currentTabIndex].focus();\n      } else {\n        list.firstChild.focus();\n      }\n    }\n  }, {\n    key: \"resetTabIndex\",\n    value: function resetTabIndex() {\n      var list = _reactDom.default.findDOMNode(this.list);\n\n      var currentFocus = (0, _activeElement.default)((0, _ownerDocument.default)(list));\n      var items = (0, _toConsumableArray2.default)(list.children);\n      var currentFocusIndex = items.indexOf(currentFocus);\n\n      if (currentFocusIndex !== -1) {\n        return this.setTabIndex(currentFocusIndex);\n      }\n\n      if (this.selectedItem) {\n        return this.setTabIndex(items.indexOf(_reactDom.default.findDOMNode(this.selectedItem)));\n      }\n\n      return this.setTabIndex(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          onBlur = _props.onBlur,\n          onKeyDown = _props.onKeyDown,\n          other = (0, _objectWithoutProperties2.default)(_props, [\"children\", \"className\", \"onBlur\", \"onKeyDown\"]);\n      return _react.default.createElement(_List.default, (0, _extends2.default)({\n        role: \"menu\",\n        ref: function ref(node) {\n          _this2.list = node;\n        },\n        className: className,\n        onKeyDown: this.handleKeyDown,\n        onBlur: this.handleBlur\n      }, other), _react.default.Children.map(children, function (child, index) {\n        if (!_react.default.isValidElement(child)) {\n          return null;\n        }\n\n        return _react.default.cloneElement(child, {\n          tabIndex: index === _this2.state.currentTabIndex ? 0 : -1,\n          ref: child.props.selected ? function (node) {\n            _this2.selectedItem = node;\n          } : undefined,\n          onFocus: _this2.handleItemFocus\n        });\n      }));\n    }\n  }]);\n  return MenuList;\n}(_react.default.Component);\n\nMenuList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: _propTypes.default.func\n} : {};\nvar _default = MenuList;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}