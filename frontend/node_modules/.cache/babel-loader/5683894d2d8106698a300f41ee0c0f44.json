{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { DateTimePickerToolbar } from './DateTimePickerToolbar';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { pick12hOr24hFormat } from '../_helpers/text-field-helper';\nimport { dateTimePickerDefaultProps } from '../constants/prop-types';\nimport { useKeyboardPickerState } from '../_shared/hooks/useKeyboardPickerState';\nimport { makePickerWithState } from '../Picker/makePickerWithState';\n\nvar defaultProps = _extends({}, dateTimePickerDefaultProps, {\n  wider: true,\n  orientation: 'portrait',\n  openTo: 'date',\n  views: ['year', 'date', 'hours', 'minutes']\n});\n\nfunction useOptions(props) {\n  var utils = useUtils();\n\n  if (props.orientation !== 'portrait') {\n    throw new Error('We are not supporting custom orientation for DateTimePicker yet :(');\n  }\n\n  return {\n    getDefaultFormat: function getDefaultFormat() {\n      return pick12hOr24hFormat(props.format, props.ampm, {\n        '12h': utils.dateTime12hFormat,\n        '24h': utils.dateTime24hFormat\n      });\n    }\n  };\n}\n\nexport var DateTimePicker = makePickerWithState({\n  useOptions: useOptions,\n  Input: PureDateInput,\n  useState: usePickerState,\n  DefaultToolbarComponent: DateTimePickerToolbar\n});\nexport var KeyboardDateTimePicker = makePickerWithState({\n  useOptions: useOptions,\n  Input: KeyboardDateInput,\n  useState: useKeyboardPickerState,\n  DefaultToolbarComponent: DateTimePickerToolbar,\n  getCustomProps: function getCustomProps(props) {\n    return {\n      refuse: props.ampm ? /[^\\dap]+/gi : /[^\\d]+/gi\n    };\n  }\n});\nDateTimePicker.defaultProps = defaultProps;\nKeyboardDateTimePicker.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}