{"ast":null,"code":"import _defineProperty from \"/Users/joe.lin/Documents/IJ/demo/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/joe.lin/Documents/IJ/demo/frontend/src/javascript/Bookcase.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\nclass Bookcase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Surname',\n        field: 'surname'\n      }, {\n        title: 'Birth Year',\n        field: 'birthYear',\n        type: 'numeric'\n      }, {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: {\n          34: 'İstanbul',\n          63: 'Şanlıurfa'\n        }\n      }],\n      data: [{\n        name: 'Mehmet',\n        surname: 'Baran',\n        birthYear: 1987,\n        birthCity: 63\n      }, {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34\n      }] // const [state, setState] = React.useState({\n      //     columns: [\n      //       { title: 'Name', field: 'name' },\n      //       { title: 'Surname', field: 'surname' },\n      //       { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      //       {\n      //         title: 'Birth Place',\n      //         field: 'birthCity',\n      //         lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      //       },\n      //     ],\n      //     data: [\n      //       { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      //       {\n      //         name: 'Zerya Betül',\n      //         surname: 'Baran',\n      //         birthYear: 2017,\n      //         birthCity: 34,\n      //       },\n      //     ],\n      //   });\n\n    };\n  }\n\n  render() {\n    return React.createElement(MaterialTable, {\n      title: \"Editable Example\",\n      columns: state.columns,\n      data: state.data,\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...state.data];\n            data.push(newData);\n            setState(_objectSpread({}, state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...state.data];\n            data[data.indexOf(oldData)] = newData;\n            setState(_objectSpread({}, state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...state.data];\n            data.splice(data.indexOf(oldData), 1);\n            setState(_objectSpread({}, state, {\n              data\n            }));\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Bookcase;","map":{"version":3,"sources":["/Users/joe.lin/Documents/IJ/demo/frontend/src/javascript/Bookcase.js"],"names":["React","Component","MaterialTable","Bookcase","state","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","render","onRowAdd","newData","Promise","resolve","setTimeout","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\n\n\nclass Bookcase extends Component {\n\n    state={\n        columns: [\n            { title: 'Name', field: 'name' },\n            { title: 'Surname', field: 'surname' },\n            { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n            {\n              title: 'Birth Place',\n              field: 'birthCity',\n              lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n            },\n          ],\n          data: [\n            { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n            {\n              name: 'Zerya Betül',\n              surname: 'Baran',\n              birthYear: 2017,\n              birthCity: 34,\n            },\n          ]\n    }\n\n    // const [state, setState] = React.useState({\n    //     columns: [\n    //       { title: 'Name', field: 'name' },\n    //       { title: 'Surname', field: 'surname' },\n    //       { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n    //       {\n    //         title: 'Birth Place',\n    //         field: 'birthCity',\n    //         lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n    //       },\n    //     ],\n    //     data: [\n    //       { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n    //       {\n    //         name: 'Zerya Betül',\n    //         surname: 'Baran',\n    //         birthYear: 2017,\n    //         birthCity: 34,\n    //       },\n    //     ],\n    //   });\n\n  render() {\n      return (\n        <MaterialTable\n        title=\"Editable Example\"\n        columns={state.columns}\n        data={state.data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      );\n  }\n}\n\nexport default Bookcase;\n"]},"metadata":{},"sourceType":"module"}