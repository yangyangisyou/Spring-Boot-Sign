{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { Picker } from './Picker';\nimport { Wrapper } from '../wrappers/Wrapper';\nexport function makePickerWithState(_ref) {\n  var Input = _ref.Input,\n      useState = _ref.useState,\n      useOptions = _ref.useOptions,\n      getCustomProps = _ref.getCustomProps,\n      DefaultToolbarComponent = _ref.DefaultToolbarComponent;\n\n  function PickerWithState(props) {\n    var allowKeyboardControl = props.allowKeyboardControl,\n        ampm = props.ampm,\n        animateYearScrolling = props.animateYearScrolling,\n        autoOk = props.autoOk,\n        dateRangeIcon = props.dateRangeIcon,\n        disableFuture = props.disableFuture,\n        disablePast = props.disablePast,\n        disableToolbar = props.disableToolbar,\n        emptyLabel = props.emptyLabel,\n        format = props.format,\n        forwardedRef = props.forwardedRef,\n        hideTabs = props.hideTabs,\n        initialFocusedDate = props.initialFocusedDate,\n        invalidDateMessage = props.invalidDateMessage,\n        invalidLabel = props.invalidLabel,\n        labelFunc = props.labelFunc,\n        leftArrowButtonProps = props.leftArrowButtonProps,\n        leftArrowIcon = props.leftArrowIcon,\n        loadingIndicator = props.loadingIndicator,\n        maxDate = props.maxDate,\n        maxDateMessage = props.maxDateMessage,\n        minDate = props.minDate,\n        minDateMessage = props.minDateMessage,\n        minutesStep = props.minutesStep,\n        onAccept = props.onAccept,\n        onChange = props.onChange,\n        onClose = props.onClose,\n        onMonthChange = props.onMonthChange,\n        onOpen = props.onOpen,\n        onYearChange = props.onYearChange,\n        openTo = props.openTo,\n        orientation = props.orientation,\n        renderDay = props.renderDay,\n        rightArrowButtonProps = props.rightArrowButtonProps,\n        rightArrowIcon = props.rightArrowIcon,\n        shouldDisableDate = props.shouldDisableDate,\n        strictCompareDates = props.strictCompareDates,\n        timeIcon = props.timeIcon,\n        _props$ToolbarCompone = props.ToolbarComponent,\n        ToolbarComponent = _props$ToolbarCompone === void 0 ? DefaultToolbarComponent : _props$ToolbarCompone,\n        value = props.value,\n        variant = props.variant,\n        views = props.views,\n        other = _objectWithoutProperties(props, [\"allowKeyboardControl\", \"ampm\", \"animateYearScrolling\", \"autoOk\", \"dateRangeIcon\", \"disableFuture\", \"disablePast\", \"disableToolbar\", \"emptyLabel\", \"format\", \"forwardedRef\", \"hideTabs\", \"initialFocusedDate\", \"invalidDateMessage\", \"invalidLabel\", \"labelFunc\", \"leftArrowButtonProps\", \"leftArrowIcon\", \"loadingIndicator\", \"maxDate\", \"maxDateMessage\", \"minDate\", \"minDateMessage\", \"minutesStep\", \"onAccept\", \"onChange\", \"onClose\", \"onMonthChange\", \"onOpen\", \"onYearChange\", \"openTo\", \"orientation\", \"renderDay\", \"rightArrowButtonProps\", \"rightArrowIcon\", \"shouldDisableDate\", \"strictCompareDates\", \"timeIcon\", \"ToolbarComponent\", \"value\", \"variant\", \"views\"]);\n\n    var injectedProps = getCustomProps ? getCustomProps(props) : {};\n    var options = useOptions(props);\n\n    var _useState = useState(props, options),\n        pickerProps = _useState.pickerProps,\n        inputProps = _useState.inputProps,\n        wrapperProps = _useState.wrapperProps;\n\n    return React.createElement(Wrapper, _extends({\n      variant: variant,\n      InputComponent: Input,\n      DateInputProps: inputProps\n    }, injectedProps, wrapperProps, other), React.createElement(Picker, _extends({}, pickerProps, {\n      allowKeyboardControl: allowKeyboardControl,\n      ampm: ampm,\n      animateYearScrolling: animateYearScrolling,\n      dateRangeIcon: dateRangeIcon,\n      disableFuture: disableFuture,\n      disablePast: disablePast,\n      disableToolbar: disableToolbar,\n      hideTabs: hideTabs,\n      leftArrowButtonProps: leftArrowButtonProps,\n      leftArrowIcon: leftArrowIcon,\n      loadingIndicator: loadingIndicator,\n      maxDate: maxDate,\n      minDate: minDate,\n      minutesStep: minutesStep,\n      onMonthChange: onMonthChange,\n      onYearChange: onYearChange,\n      openTo: openTo,\n      orientation: orientation,\n      renderDay: renderDay,\n      rightArrowButtonProps: rightArrowButtonProps,\n      rightArrowIcon: rightArrowIcon,\n      shouldDisableDate: shouldDisableDate,\n      strictCompareDates: strictCompareDates,\n      timeIcon: timeIcon,\n      ToolbarComponent: ToolbarComponent,\n      views: views\n    })));\n  }\n\n  return PickerWithState;\n}","map":null,"metadata":{},"sourceType":"module"}